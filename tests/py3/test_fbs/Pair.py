# automatically generated by the FlatBuffers compiler, do not modify

# namespace: test_fbs

import flatbuffers

class Pair(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPair(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Pair()
        x.Init(buf, n + offset)
        return x

    # Pair
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Pair
    def First(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Pair
    def Second(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def PairStart(builder): builder.StartObject(2)
def PairAddFirst(builder, first): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(first), 0)
def PairAddSecond(builder, second): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(second), 0)
def PairEnd(builder): return builder.EndObject()
